const { MongoClient } = require('mongodb');

// URI k·∫øt n·ªëi t·ªõi MongoDB (localhost n·∫øu b·∫°n d√πng Docker)
const uri = 'mongodb://localhost:27017';

// T√™n c∆° s·ªü d·ªØ li·ªáu b·∫°n mu·ªën t·∫°o
const dbName = 'myNewDatabase';

async function createDatabase() {
    const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });

    try {
        // K·∫øt n·ªëi t·ªõi MongoDB
        await client.connect();
        console.log('Connected to MongoDB');

        // T·∫°o c∆° s·ªü d·ªØ li·ªáu m·ªõi (MongoDB s·∫Ω t·∫°o c∆° s·ªü d·ªØ li·ªáu n√†y khi b·∫°n th·ª±c hi·ªán m·ªôt thao t√°c v√†o c∆° s·ªü d·ªØ li·ªáu ƒë√≥)
        const db = client.db(dbName);

        // Th·ª±c hi·ªán m·ªôt thao t√°c ƒë∆°n gi·∫£n ƒë·ªÉ t·∫°o c∆° s·ªü d·ªØ li·ªáu
        const collection = db.collection('newCollection');
        // await collection.insertOne({ name: 'test', value: 'any value', customId: 2, newCol: true });
        const result = await collection.findOne({})
        console.log("üöÄ ~ createDatabase ~ result:", result)

        console.log(`Database ${dbName} created successfully`);

    } catch (err) {
        console.error('Error:', err);
    } finally {
        // ƒê·∫£m b·∫£o r·∫±ng b·∫°n lu√¥n ƒë√≥ng k·∫øt n·ªëi khi xong
        await client.close();
    }
}

createDatabase().catch(console.error);
